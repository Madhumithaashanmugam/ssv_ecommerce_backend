"""first init

Revision ID: 8d92323a42e8
Revises: 
Create Date: 2025-05-12 06:23:00.771593

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8d92323a42e8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customer_user',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('otp', sa.String(), nullable=True),
    sa.Column('is_otp_verified', sa.Boolean(), nullable=True),
    sa.Column('active_orders', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('decline_orders', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('completed_orders', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('created_datetime', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_datetime', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_index(op.f('ix_customer_user_email'), 'customer_user', ['email'], unique=True)
    op.create_index(op.f('ix_customer_user_id'), 'customer_user', ['id'], unique=False)
    op.create_table('guest_user',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('street_line', sa.String(), nullable=False),
    sa.Column('plot_number', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('zip_code', sa.String(), nullable=False),
    sa.Column('created_datetime', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_datetime', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_guest_user_id'), 'guest_user', ['id'], unique=False)
    op.create_table('orders',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('guest_user_id', sa.String(), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('items', sa.JSON(), nullable=False),
    sa.Column('order_status', sa.Enum('pending', 'accepted', 'declined', 'completed', name='orderstatus'), nullable=False),
    sa.Column('payment_method', sa.Enum('online', 'cod', name='paymentmethod'), nullable=False),
    sa.Column('payment_status', sa.Enum('pending', 'success', 'failed', name='paymentstatus'), nullable=True),
    sa.Column('is_paid', sa.Boolean(), nullable=True),
    sa.Column('razorpay_order_id', sa.String(), nullable=True),
    sa.Column('razorpay_payment_id', sa.String(), nullable=True),
    sa.Column('razorpay_signature', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('created_datetime', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_datetime', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_orders_id'), 'orders', ['id'], unique=False)
    op.create_table('vendor_user',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('otp', sa.String(), nullable=True),
    sa.Column('is_otp_verified', sa.Boolean(), nullable=True),
    sa.Column('token_version', sa.Integer(), nullable=True),
    sa.Column('active_orders', postgresql.ARRAY(sa.String()), server_default=sa.text('ARRAY[]::VARCHAR[]'), nullable=False),
    sa.Column('decline_orders', postgresql.ARRAY(sa.String()), server_default=sa.text('ARRAY[]::VARCHAR[]'), nullable=False),
    sa.Column('completed_orders', postgresql.ARRAY(sa.String()), server_default=sa.text('ARRAY[]::VARCHAR[]'), nullable=False),
    sa.Column('created_datetime', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_datetime', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_index(op.f('ix_vendor_user_email'), 'vendor_user', ['email'], unique=True)
    op.create_index(op.f('ix_vendor_user_id'), 'vendor_user', ['id'], unique=False)
    op.create_table('addresses',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('customer_id', sa.String(), nullable=False),
    sa.Column('address_line', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('zip_code', sa.String(), nullable=False),
    sa.Column('extra_details', sa.String(), nullable=True),
    sa.Column('created_datetime', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_datetime', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customer_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_addresses_id'), 'addresses', ['id'], unique=False)
    op.create_table('categories',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('vendor_id', sa.String(), nullable=False),
    sa.Column('category_name', sa.String(), nullable=False),
    sa.Column('created_datetime', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_datetime', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.create_table('order_items',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('order_id', sa.String(), nullable=False),
    sa.Column('item_id', sa.String(), nullable=False),
    sa.Column('item_name', sa.String(), nullable=False),
    sa.Column('item_price', sa.Float(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('product_image', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_items_id'), 'order_items', ['id'], unique=False)
    op.create_table('items',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('category_id', sa.String(), nullable=False),
    sa.Column('item_name', sa.String(), nullable=False),
    sa.Column('item_price', sa.Float(), nullable=False),
    sa.Column('discount', sa.Float(), nullable=True),
    sa.Column('final_price', sa.Float(), nullable=True),
    sa.Column('kg', sa.Float(), nullable=False),
    sa.Column('quality', sa.String(), nullable=False),
    sa.Column('product_image', sa.String(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_datetime', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_datetime', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_items_id'), 'items', ['id'], unique=False)
    op.create_table('carts',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('cart_id', sa.String(), nullable=True),
    sa.Column('customer_id', sa.String(), nullable=True),
    sa.Column('guest_user_id', sa.String(), nullable=True),
    sa.Column('item_id', sa.String(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('created_datetime', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_datetime', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customer_user.id'], ),
    sa.ForeignKeyConstraint(['guest_user_id'], ['guest_user.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_carts_cart_id'), 'carts', ['cart_id'], unique=False)
    op.create_index(op.f('ix_carts_id'), 'carts', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_carts_id'), table_name='carts')
    op.drop_index(op.f('ix_carts_cart_id'), table_name='carts')
    op.drop_table('carts')
    op.drop_index(op.f('ix_items_id'), table_name='items')
    op.drop_table('items')
    op.drop_index(op.f('ix_order_items_id'), table_name='order_items')
    op.drop_table('order_items')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.drop_table('categories')
    op.drop_index(op.f('ix_addresses_id'), table_name='addresses')
    op.drop_table('addresses')
    op.drop_index(op.f('ix_vendor_user_id'), table_name='vendor_user')
    op.drop_index(op.f('ix_vendor_user_email'), table_name='vendor_user')
    op.drop_table('vendor_user')
    op.drop_index(op.f('ix_orders_id'), table_name='orders')
    op.drop_table('orders')
    op.drop_index(op.f('ix_guest_user_id'), table_name='guest_user')
    op.drop_table('guest_user')
    op.drop_index(op.f('ix_customer_user_id'), table_name='customer_user')
    op.drop_index(op.f('ix_customer_user_email'), table_name='customer_user')
    op.drop_table('customer_user')
    # ### end Alembic commands ###
